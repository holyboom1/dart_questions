/// Задача:
/// У вас есть базовый класс Shape, представляющий геометрическую фигуру,
/// с двумя атрибутами: name (название фигуры) и area (площадь фигуры).
/// У класса есть метод calculateArea, который возвращает площадь фигуры.

class Shape {
  String name;
  double area;

  Shape(this.name, this.area);

  double calculateArea() {
    return area;
  }
}

void main() {
  var square = Shape('Square', 16.0);
  var circle = Shape('Circle', 12.56);

  print('Area of ${square.name}: ${square.calculateArea()}');
  print('Area of ${circle.name}: ${circle.calculateArea()}');
}

/// Задача:
///
/// Идентифицируйте ошибку в данном коде, связанную с принципами ООП.
/// Предложите улучшение кода, чтобы лучше соответствовать принципам ООП.
/// Примечание:
/// Обратите внимание на использование атрибута area в качестве атрибута экземпляра, а также на то, как этот атрибут используется в методе
/// calculateArea. Сосредоточьтесь на том, как можно улучшить инкапсуляцию и применение принципов ООП в данном контексте.

/// Решение:
/// Ошибка в данном коде заключается в том, чтоатрибут
/// area является открытым(
/// public) и может быть изменен извне. Это нарушает принцип инкапсуляции.
///
/// Исправим код, сделав атрибут area закрытым (private) и предоставив метод для его получения:
